# -*- tab-width:  4 -*- ;; Emacs
# vi: set tabstop=4     :: Vi/ViM

############################################################ INFORMATION
#
# The following settings are pre-pended to this file by all_install...
#
# Required by mediaSetNullFS:
# 	nullfs=[$FREEBSD]
#
# Required by distExtractAll:
# 	installRoot=/mnt
#
# Required by distSetCustom:
# 	dists=[$DISTS]
#
# Required by diskPartitionEditor:
# 	disk=[device name]
#
# Required by diskLabelEditor:
# 	diskInteractive=YES
# or (something like)
# 	[$disk]s1-1=ufs  2097152  /    0
# 	[$disk]s1-2=swap [swapsz] none 0
# 	[$disk]s1-3=ufs  2097152  /var 1
# 	[$disk]s1-4=ufs  2097152  /tmp 1
# 	[$disk]s1-5=ufs  0        /usr 1
#
############################################################

################################ Additional Settings

# Set that we intend to partition the entire disk
partition=all

# Enable the FreeBSD boot manager
bootManager=boot

# Using non-static address assignment requires a default host name
hostname=localhost

# Disable all network access
tryDHCP=NO
tryRTSOL=NO

################################ Apply Settings

# Media access setting
#
# Custom resword which has these properties:
# - sets mediaDevice to custom DEVICE_TYPE_NULLFS
# - upon DEVICE_INIT will:
#   - create `[installRoot]/dist' (`/mnt/dist' by default) directory if it
#     does not already exist
#   - load kernel module `nullfs.ko' if necessecary
#   - mount directory specified in `nullfs' variable on `[installRoot]/dist'
#     (`/mnt/dist' by default)
#   - perform chroot(2) into `installRoot' (`/mnt')
#   - call configResolv, which:
#     - creates `/etc/resolv.conf' file
#     - creates `/etc/hosts' file
#   - call configFstab, which:
#     - creates `/etc/fstab' file
# NOTE: After `installCommit', sysinstall will be jailed inside `/mnt'
# - DEVICE_GET is implemented simply as a call to mediaGenericGet, which:
#   - is 'a generic open which follws a well-known "path" of places to look'
# - upon DEVICE_SHUTDOWN will:
#   - unmount `/mnt/dist' (actually `/dist' at shutdown)
#
mediaSetNullFS

# Custom dist setting
distSetCustom

# Disk partition/label settings
diskPartitionEditor
diskLabelEditor

################################ Commit

# Commit all the changes to disk (the disk will be wiped out
# at this point). PNR - Point of No Return !!
#
# The below resword (installCommit) performs the following:
#
# - verifies Dists (set via `distSetCustom' resword in combination with the
#   `dists' variable)
# - verifies mediaDevice (set via `mediaSetNullFS' resword above in combination
#   with the `nullfs' variable)
#   NOTE: mediaSetNullFS resword will mount `nullfs' directory to the
#         directory `[installRoot]/dist'
# - Calls installInitial, which:
#   - verifies that disks are labeled (see `diskLabelEditor' above)
#   - verifies that disks are partitioned (see `diskPartitionEditor' above)
#   - calls diskLabelCommit (a valid resword), which:
#     - calls diskPartitionWrite (a valid resword), which:
#       - calls Write_Disk for the specified `disk', where Write_disk:
#         - is part of libdisk(3)
#         - writes all the MBRs, disklabels, bootblocks and boot managers
#     - calls installFilesystems (a valid resword), which:
#       - installs all filesystems (many various tasks) 
#   - calls copySelf, which:
#     - copies `/boot.help' (if it exists) from memory filesystem (MFS) to
#       the install-root
#     - copies /stand to the install-root
#     - copies /stand/etc to /etc, which [currently] contains:
#       - Default `group' file
#       - Default `netconfig' file
#       - Default `protocols' file
#       - Default `services' file
#       - Default `defaults/rc.conf' file
#       NOTE: These files get overwritten by the installed base. They are
#             simply to aid sysinstall and other executabls called during
#             the following stages.
#   - performs chroot into install-root
#     NOTE: when DEVICE_TYPE_NULLFS is set internally (see `mediaSetNullFS'
#           above) chroot(2) is not performed here but later during
#           DEVICE_INIT.
#   - calls configResolv, which:
#     - creates `/etc/resolv.conf' file
#     - creates `/etc/hosts' file
#     NOTE: when DEVICE_TYPE_NULLFS is set internally, configResolv is
#           skipped here and performed during DEVICE_INIT after chroot(2).
#   - calls configFstab, which:
#     - creates `/etc/fstab' file
#     NOTE: when DEVICE_TYPE_NULLFS is set internally, configFstab is
#           skipped here and performed during DEVICE_INIT after chroot(2).
#   - optionally relaunches the holoshell with shell `/stand/sh' within
#     chroot'ed installRoot if `noHoloShell' variable is NOT set (which we
#     do set to prevent execution of xarch binaries which could cause us to
#     possibly crash/hang).
# - calls DEVICE_INIT (see `mediaSetNullFS' above)
# - calls distExtractAll (a valid resword), which:
#   - verifies `dists' setting
#   - verifies media settings
#   - calls distExtract for each "distribution-set" in Dists (set earlier by
#     the distSetCustom resword in combination with the `dists' variable)
#   - calls installFixupBase (a valid resword), which:
#     - creates default `/boot/loader.conf' file with:
#       # --- sysinstall generated deltas -- #
#        console="comconsole"
#     - changes permissions on `/etc' directory to 0755
#     - creates directory `/var/db'
#     - creates file `/var/db/mountdtab' with permissions 0644
#     - creates directory `/usr/compat'
#     - symbolically links `/compat' to directory `/usr/compat'
#     - performs `newaliases'
#     - sets system-wide permissions using mtree(3)
#   - calls installFixupKernel (a valid resword), which:
#     - Moves `/boot/GENERIC' to `/boot/kernel' (if GENERIC kernel dist was
#       installed)
# - calls installEnvironment, which:
#   - calls configEnvironmentRC_conf, which:
#     - sources the file `/etc/defaults/rc.conf'
#     - sources the file `/etc/rc.conf'
#     - sources the file `/etc/rc.conf.local'
#   - calls configEnvironmentResolv (if `/etc/resolv.conf' is readable), which:
#     - sources the file `/etc/resolv.conf' (to assign the value of `domain'
#       to the variable `domainname' and the value of nameserver to the
#       variable `nameserver' -- referenced by configResolv; should
#       configResolv be called again, the old values will be retained when
#       re-writing the file `/etc/resolv.conf')
#
installCommit

# NOTE: You cannot use `loadConfig' after `installCommit'
# unless the configuration file exists within the newly
# created filesystem as we are jailed into the root of the
# installation path at this point.

################################################################################
# END
################################################################################
#
# $Header: /cvsroot/druidbsd/druidbsd/druid83/src/freebsd/menu/etc/common.cfg,v 1.1 2012/10/10 23:30:22 devinteske Exp $
#
# $Copyright: 2006-2012 Devin Teske. All rights reserved. $
#
# $Log: common.cfg,v $
# Revision 1.1  2012/10/10 23:30:22  devinteske
# Commit initial public beta release of 8.3 series (beta 57; on-par with
# the 9.0 series released recently, also beta 57).
#
#
################################################################################
